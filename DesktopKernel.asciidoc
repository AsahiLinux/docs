This pages explain how to build a desktop kernel with the latest features. It also lists all kernel options that are necessary to get all ASAHI features and which one better to disable.

# Current Desktop Kernel
```
# Install Build Dependencies
sudo apt install -y gcc-aarch64-linux-gnu device-tree-compiler


if [ "`uname -m`" != 'aarch64' ]; then
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
fi
test -d linux || git clone --depth 1 https://github.com/AsahiLinux/linux
cd linux
curl -s https://tg.st/u/40c9642c7569c52189f84621316fc9149979ee65.patch | git am -
curl -s https://tg.st/u/0001-4k-iommu-patch-2022-03-11.patch | git am -
curl -s https://tg.st/u/config-2022-03-17-distro-sven-jannau.txt > .config
make olddefconfig
make -j $(( 2* `nproc`)) V=0 Image.gz modules dtbs
```

If you want to build debian packages

```
make -j $(( 2* `nproc`)) V=0 bindeb-pkg
```

# Kerneloptions

The following kernel options are necessary to get all features.
```
CONFIG_APPLE_ADMAC
CONFIG_APPLE_AIC
CONFIG_APPLE_DART
CONFIG_APPLE_MAILBOX
CONFIG_APPLE_PLATFORMS
CONFIG_APPLE_PMGR_PWRSTATE
CONFIG_APPLE_RTKIT
CONFIG_APPLE_SART
CONFIG_APPLE_SMC
CONFIG_APPLE_SMC_RTKIT
CONFIG_APPLE_WATCHDOG
CONFIG_ARCH_APPLE
CONFIG_ARM_APPLE_SOC_CPUFREQ
CONFIG_BRCMFMAC
CONFIG_BRCMFMAC_PCIE
CONFIG_CFG80211_WEXT
CONFIG_CHARGER_MACSMC
CONFIG_COMMON_CLK_APPLE_NCO
CONFIG_DRM
CONFIG_DRM_SIMPLEDRM
CONFIG_FW_LOADER_USER_HELPER
CONFIG_FW_LOADER_USER_HELPER_FALLBACK
CONFIG_GPIO_MACSMC
CONFIG_HID_APPLE
CONFIG_HID_MAGICMOUSE
CONFIG_I2C_APPLE
CONFIG_MFD_APPLE_SPMI_PMU
CONFIG_MMC_SDHCI_PCI
CONFIG_NLMON
CONFIG_NVMEM_SPMI_MFD
CONFIG_NVME_APPLE
CONFIG_PCIE_APPLE
CONFIG_PINCTRL_APPLE_GPIO
CONFIG_POWER_RESET_MACSMC
CONFIG_RTC_DRV_MACSMC
CONFIG_SND_SIMPLE_CARD
CONFIG_SND_SOC_APPLE_MCA
CONFIG_SND_SOC_APPLE_SILICON
CONFIG_SND_SOC_CS42L42
CONFIG_SND_SOC_TAS2770
CONFIG_SPI_APPLE
CONFIG_SPI_HID_APPLE_CORE
CONFIG_SPI_HID_APPLE_OF
CONFIG_SPMI_APPLE
CONFIG_USB_DWC3
CONFIG_USB_DWC3_PCI
CONFIG_FB_EFI
CONFIG_BACKLIGHT_CLASS_DEVICE
CONFIG_BACKLIGHT_GPIO
CONFIG_TYPEC_TPS6598X
```

The following kernel options should be disabled because otherwise loading the right firmware takes forever due to a timeout:

```
CONFIG_FW_LOADER_USER_HELPER_FALLBACK
CONFIG_FW_LOADER_USER_HELPER
```